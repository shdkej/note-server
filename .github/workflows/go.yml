name: Go

on:
  pull_request:

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      id: test
      run: echo ::set-output name=stdout::`go test -v ./...`

    - name: Build
      id: build
      run: go build -v ./...

    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      if: always() && github.event_name == 'pull_request'
      env:
        STDOUT: "go test\n${{ steps.test.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `
          <details><summary>Show Test Result</summary>\n
          \`\`\`
          ${process.env.STDOUT}\n
          \`\`\`
          </details>`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Docker compose Test
      run: docker-compose up -d

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Calc coverage
        run: |
          go test -v -covermode=count -coverprofile=coverage.out ./server

      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.5

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  versioning:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
